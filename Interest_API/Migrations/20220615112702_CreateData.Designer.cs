// <auto-generated />
using Interest_API.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Interest_API.Migrations
{
    [DbContext(typeof(InterestContext))]
    [Migration("20220615112702_CreateData")]
    partial class CreateData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Interest_API.Models.Post", b =>
                {
                    b.Property<int>("Post_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Post_Description")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int>("User_Id")
                        .HasColumnType("integer");

                    b.HasKey("Post_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Post_Id = 1,
                            Author = "LadeMor",
                            Image = "https://i.pinimg.com/474x/ff/13/f3/ff13f379c308e9753a6f94ea179caf47.jpg",
                            Post_Description = "First post in my app",
                            Title = "Post1",
                            User_Id = 1
                        },
                        new
                        {
                            Post_Id = 2,
                            Author = "LadeMor",
                            Image = "https://i.pinimg.com/474x/3b/ff/38/3bff3800984503efe1edaeb596755b22.jpg",
                            Post_Description = "Really cool car",
                            Title = "Cool car",
                            User_Id = 1
                        },
                        new
                        {
                            Post_Id = 3,
                            Author = "LadeMor",
                            Image = "https://i.pinimg.com/474x/ee/cc/60/eecc60d000dbe7c6d5bf91ec9e46ed45.jpg",
                            Post_Description = "Really cool anime",
                            Title = "Cool anime",
                            User_Id = 1
                        },
                        new
                        {
                            Post_Id = 4,
                            Author = "LadeMor",
                            Image = "https://i.pinimg.com/474x/3b/ff/38/3bff3800984503efe1edaeb596755b22.jpg",
                            Post_Description = "Really cool car",
                            Title = "Cool car",
                            User_Id = 1
                        });
                });

            modelBuilder.Entity("Interest_API.Models.Role", b =>
                {
                    b.Property<int>("Role_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Role_Id");

                    b.HasIndex("Role_Name")
                        .IsUnique();

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Role_Id = 1,
                            Role_Name = "administrator"
                        },
                        new
                        {
                            Role_Id = 2,
                            Role_Name = "user"
                        });
                });

            modelBuilder.Entity("Interest_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Web developer",
                            Email = "lademor@gmail.com",
                            Password = "1234",
                            RoleId = 1,
                            Username = "LadeMor"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Artist",
                            Email = "jabe@gmail.com",
                            Password = "1111",
                            RoleId = 2,
                            Username = "Jabe"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Gamer",
                            Email = "flomy@gmail.com",
                            Password = "2222",
                            RoleId = 2,
                            Username = "Flomic"
                        },
                        new
                        {
                            Id = 4,
                            Description = "C++ game developer",
                            Email = "swon@gmail.com",
                            Password = "3333",
                            RoleId = 2,
                            Username = "Swonsonn"
                        });
                });

            modelBuilder.Entity("Interest_API.Models.Post", b =>
                {
                    b.HasOne("Interest_API.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Interest_API.Models.User", b =>
                {
                    b.HasOne("Interest_API.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Interest_API.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Interest_API.Models.User", b =>
                {
                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
